
// Generated by delombok at Tue Apr 02 11:23:05 CDT 2019

import java.util.*;

public class SampleEmployeeBuilderDelomboked {
    // to assign a default value
    private long created;
    private String firstName;
    private String lastName;
    private int phoneNo;
    private Set<String> addresses;

    @java.lang.SuppressWarnings("all")
    private static long $default$created() {
        return System.currentTimeMillis();
    }

    @java.lang.SuppressWarnings("all")
    SampleEmployeeBuilderDelomboked(final long created, final String firstName, final String lastName, final int phoneNo, final Set<String> addresses) {
        this.created = created;
        this.firstName = firstName;
        this.lastName = lastName;
        this.phoneNo = phoneNo;
        this.addresses = addresses;
    }


    @java.lang.SuppressWarnings("all")
    public static class SampleEmployeeBuilderBuilder {
        @java.lang.SuppressWarnings("all")
        private boolean created$set;
        @java.lang.SuppressWarnings("all")
        private long created;
        @java.lang.SuppressWarnings("all")
        private String firstName;
        @java.lang.SuppressWarnings("all")
        private String lastName;
        @java.lang.SuppressWarnings("all")
        private int phoneNo;
        @java.lang.SuppressWarnings("all")
        private java.util.ArrayList<String> addresses;

        @java.lang.SuppressWarnings("all")
        SampleEmployeeBuilderBuilder() {
        }

        @java.lang.SuppressWarnings("all")
        public SampleEmployeeBuilderBuilder created(final long created) {
            this.created = created;
            created$set = true;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        public SampleEmployeeBuilderBuilder firstName(final String firstName) {
            this.firstName = firstName;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        public SampleEmployeeBuilderBuilder lastName(final String lastName) {
            this.lastName = lastName;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        public SampleEmployeeBuilderBuilder phoneNo(final int phoneNo) {
            this.phoneNo = phoneNo;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        public SampleEmployeeBuilderBuilder address(final String address) {
            if (this.addresses == null) this.addresses = new java.util.ArrayList<String>();
            this.addresses.add(address);
            return this;
        }

        @java.lang.SuppressWarnings("all")
        public SampleEmployeeBuilderBuilder addresses(final java.util.Collection<? extends String> addresses) {
            if (this.addresses == null) this.addresses = new java.util.ArrayList<String>();
            this.addresses.addAll(addresses);
            return this;
        }

        @java.lang.SuppressWarnings("all")
        public SampleEmployeeBuilderBuilder clearAddresses() {
            if (this.addresses != null) this.addresses.clear();
            return this;
        }

        @java.lang.SuppressWarnings("all")
        public SampleEmployeeBuilder build() {
            java.util.Set<String> addresses;
            switch (this.addresses == null ? 0 : this.addresses.size()) {
                case 0:
                    addresses = java.util.Collections.emptySet();
                    break;

                case 1:
                    addresses = java.util.Collections.singleton(this.addresses.get(0));
                    break;

                default:
                    addresses = new java.util.LinkedHashSet<String>(this.addresses.size() < 1073741824 ? 1 + this.addresses.size() + (this.addresses.size(
                    ) - 3) / 3 : java.lang.Integer.MAX_VALUE);
                    addresses.addAll(this.addresses);
                    addresses = java.util.Collections.unmodifiableSet(addresses);
            }
            long created = this.created;
            if (!created$set) created = SampleEmployeeBuilderDelomboked.$default$created();
            return new SampleEmployeeBuilder(created, firstName, lastName, phoneNo, addresses);
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        public java.lang.String toString() {
            return "SampleEmployeeBuilder.SampleEmployeeBuilderBuilder(created=" + this.created + ", firstName=" + this.firstName + ", lastName=" + this.lastName + ", phoneNo=" + this.phoneNo + ", addresses=" + this.addresses + ")";
        }
    }

    @java.lang.SuppressWarnings("all")
    public static SampleEmployeeBuilderBuilder builder() {
        return new SampleEmployeeBuilderBuilder();
    }
}
